#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend http-in
    bind :80
    acl host_mrtg hdr(host) -i mrtg.example.com
    acl host_router hdr(host) -i gateway.example.com
    use_backend mrtg_backend if host_mrtg
    use_backend router_backend if host_router


frontend https-in
    bind :443 ssl crt /etc/haproxy/certs/wildcard.crt
    acl host_mrtg hdr(host) -i mrtg.example.com
    acl host_router hdr(host) -i gateway.example.com
    use_backend mrtg_backend if host_mrtg
    use_backend router_backend if host_router

backend mrtg_backend
    mode http
    balance roundrobin
    option forwardfor
    server mrtg palimium.example.com:443 check ssl verify none

backend router_backend
    mode http
    balance roundrobin
    option forwardfor
    server router gateway.example.com:80 check
